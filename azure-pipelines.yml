# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  
steps:
- script: echo Build Starting...
  displayName: 'Run a one-line script'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test execution
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

#- task: DotNetCoreCLI@2
#  displayName: Publish
#  inputs:
#    command: publish
#    publishWebProjects: True
#    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#    zipAfterPublish: True

#- task: PublishPipelineArtifact@1
#  displayName: Arctifact Publish
#  inputs:
#    targetPath: '$(Build.ArtifactStagingDirectory)' 
#    artifactName: '$(Build.BuildNumber)' 

- task: PublishTestResults@2
  displayName: Test Result
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: Docker@2
  inputs:
    command: 'build'
    Dockerfile: '**/Dockerfile'